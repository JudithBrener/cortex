version: '3.4'

x-common-wait-args: &WAIT_ARGS
  - WAIT_HOSTS=rabbitmq:5672
  - WAIT_SLEEP_INTERVAL=3
  - WAIT_HOSTS_TIMEOUT=60
  - WAIT_BEFORE_HOSTS=5

services:

  server:
    image: snapshots-server
    build: .
    ports:
      - 8000:8000
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.server run-server -h '0.0.0.0' -p 8000 rabbitmq://rabbitmq:5672/"
    environment: *WAIT_ARGS
    depends_on:
      - rabbitmq

  pose-parser:
    image: pose-parser
    build: .
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.parsers run-parser pose rabbitmq://rabbitmq:5672/"
    environment: *WAIT_ARGS
    depends_on:
      - server
      - rabbitmq

  color-image-parser:
    image: color-image-parser
    build: .
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.parsers run-parser color_image rabbitmq://rabbitmq:5672/"
    environment: *WAIT_ARGS
    depends_on:
      - server
      - rabbitmq

  depth-image-parser:
    image: depth-image-parser
    build: .
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.parsers run-parser depth_image rabbitmq://rabbitmq:5672/"
    environment: *WAIT_ARGS
    depends_on:
      - server
      - rabbitmq

  feelings-parser:
    image: feelings-parser
    build: .
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.parsers run-parser feelings rabbitmq://rabbitmq:5672/"
    environment: *WAIT_ARGS
    depends_on:
      - server
      - rabbitmq

  saver:
    image: saver
    build: .
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.saver run-saver mongodb://mongodb:27017/ rabbitmq://rabbitmq:5672/"
    environment:
      - WAIT_HOSTS=rabbitmq:5672, mongodb:27017
      - WAIT_SLEEP_INTERVAL=3
      - WAIT_HOSTS_TIMEOUT=60
      - WAIT_BEFORE_HOSTS=5
    depends_on:
      - server
      - rabbitmq
      - mongodb

  api:
    image: api
    build: .
    ports:
      - 5000:5000
    volumes:
      - cortex_data:/tmp/cortex-data
    command: sh -c "/wait && python -m cortex.api run-server -h '0.0.0.0' -p 5000 -d mongodb://mongodb:27017/"
    environment:
      - WAIT_HOSTS=mongodb:27017
      - WAIT_SLEEP_INTERVAL=3
      - WAIT_HOSTS_TIMEOUT=60
      - WAIT_BEFORE_HOSTS=5
    depends_on:
      - mongodb

#  gui:
#    image: gui
#    build:
#      context: .
#      dockerfile: ./cortex/gui/Dockerfile
#    ports:
#      - 8080:8080
#    command: sh -c "/wait && python -m cortex.api run-server -h '0.0.0.0' -p 5000 -d mongodb://mongodb:27017/"
#    environment:
#      - WAIT_HOSTS=mongodb:27017
#      - WAIT_SLEEP_INTERVAL=3
#      - WAIT_HOSTS_TIMEOUT=60
#      - WAIT_BEFORE_HOSTS=5
#    depends_on:
#      - mongodb

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672

  mongodb:
    image: mongo:4.2.6
    ports:
      - 27017:27017
    volumes:
      - mongo_volume:/data/db

volumes:
  mongo_volume:
  cortex_data: